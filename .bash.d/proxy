proxy() {
    local cmd="${1:-status}";
    local conf_file="${CNTLM_CONF_FILE:-/etc/cntlm.conf}";
    local path="${CNTLM_PATH:-/usr/sbin/cntlm}";
    local pid_file="${CNTLM_PID_FILE:-/var/run/cntlm/pid}";
    local pid="$(cat "$pid_file" 2>/dev/null)";

    case "$cmd" in
        env)
            export ALL_PROXY='http://localhost:3128';
            export HTTP_PROXY="$ALL_PROXY";
            export http_proxy="$ALL_PROXY";
            ;;
        noenv)
            unset ALL_PROXY HTTP_PROXY http_proxy;
            ;;
        restart)
            proxy stop && proxy start;
            ;;
        start)
            if proxy status &>/dev/null; then
                proxy env;

                proxy status;

                return;
            fi;

            "$path" -c "$conf_file" -P "$pid_file" || return $?;

            echo 'Successfully started proxy.';

            proxy status;

            proxy env;
            ;;
        status)
            if [[ -z "$pid" ]]; then
                echo "proxy is stopped.";

                return 1;
            fi;

            let n="$(ps aux | grep "$path" | grep "$pid" | grep -v grep | wc -l)";

            if [[ $n = 0 ]]; then
                echo "proxy is stopped.";

                if [[ ! -z "$pid" ]]; then
                    echo "pid file with pid $pid. Removing it...";

                    rm -f "$pid_file";
                fi;

                return 1;
            else
                echo "proxy is running with pid $pid.";

                env | grep -i 'proxy=';

                return 0;
            fi;
            ;;
        stop)
            if proxy status &>/dev/null; then
                kill -INT "$pid" || return $?;

                if proxy status &>/dev/null; then
                    echo 'Failed to stop proxy.';

                    return 1;
                else
                    echo 'Successfully stopped proxy.';

                    if [[ -f "$pid_file" ]]; then
                        echo "Removing pid file $pid_file..." 1>&2;

                        rm -f "$pid_file";
                    fi;

                    return 0;
                fi;
            else
                proxy status;
            fi;

            proxy noenv;
            ;;
        *)
            echo "Error: Invalid sub-command <<$cmd>>" 1>&2;

            return 1;
            ;;
    esac;
};
